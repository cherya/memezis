// Code generated by protoc-gen-goclay, but your can (must) modify it.
// source: memezis.proto

package memezis

import (
	"context"
	e "github.com/cherya/memezis/pkg/errors"
	"google.golang.org/appengine/log"
	"net/http"
	"time"

	desc "github.com/cherya/memezis/pkg/memezis"
)

func (i *Memezis) GetQueueInfo(ctx context.Context, req *desc.GetQueueInfoRequest) (*desc.GetQueueInfoResponse, error) {
	queueName := req.GetQueue()
	length, err := i.qm.QueueLength(queueName)
	if err != nil {
		log.Errorf(ctx, "GetQueueInfo: can't get queue length (err=%s)", err)
		return nil, e.NewC("can't get queue length", http.StatusInternalServerError)
	}

	lastPostTime, err := i.qm.QueueLastPopTime(queueName)
	if err != nil {
		log.Errorf(ctx, "GetQueueInfo: can't get queue last job time (err=%s)", err)
		return nil, e.NewC("can't get queue last job time", http.StatusInternalServerError)
	}
	dueTime := lastPostTime

	if length > 0 {
		timeout, err := i.qm.GetQueueTimeout(queueName)
		if err != nil {
			log.Errorf(ctx, "GetQueueInfo: can't get queue timeout (err=%s)", err)
			return nil, e.NewC("can't get queue timeout", http.StatusInternalServerError)
		}

		dueTime = dueTime.Add(timeout * time.Duration(length))
	}

	return &desc.GetQueueInfoResponse{
		Length:       length,
		DueTime:      toProtoTime(dueTime),
		LastPostTime: toProtoTime(lastPostTime),
	}, nil
}
